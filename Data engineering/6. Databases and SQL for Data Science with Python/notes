we (and the machines we have built to do work) generate a lot of data. this data requires analysis, manipulation and management if we
are to derive value from it. this is why jobs in the data ecosystem were created and continue to grow.

whichever way you refer to data, data centric world or data is the new oil, the large amount of data that is being generated needs vast 
repositories for storage.

SQL is a utility that was created to help with querying, updating and manipulating of structured data stored in repositories. 

SQL constructs can also be executed from within various programming languages; perhaps the most popular language that it is used with 
is python because it is a simple language.

what is data? a collection of facts that can include words, numbers or pictures. it is one of the most critical assets of any business. 
since it is critical to businesses it needs to be securely stored. this is where databases come into play.

a database is a program that stores data (a repository of data). there are different types of databases, they include - relational 
databases (data stored in tabular form), nosql etc.

what about database management systems? they are a set of software utilities that help in the management of data stored in a database. 
this management includes access, organisation, and storage. the terms database, database server, database system, data server, and DBMS 
are often used interchangeably.

in the case of relational databases, their DBMS are referred to as RDBMS. examples of RDBMS include MySQL, Oracle database, IBM Db2, MS 
SQL Server, Postgresql etc.

the select statement is a DML statement.

what is a DML statement? used to read and modify data.

the output from a DML statement is called a result set or a result table.

you can restrict the result set returned by using the WHERE clause.

a full list of comparison operators supported by a RDBMS: = > < >= <= <> (not equal to)

count is a built in database function that returns the number of rows that match a criteria.

the distinct built in function removes duplicate values from a result set.

the limit built in function restricts the number of rows retrieved from a table.

insert statement is used to add new rows to a table. it is a DML statement. see insert1.png and insert2.png

the update statement is used to alter the rows of a table that is already populated. it is a DML statement see update1

delete statement is a DML statement see delete.png

The relational model is the most used data model for databases because this model allows for 
data independence. Data is stored in a simple data structure - Tables.

An entity relationship data model, or ER data model, is an alternative to a relational data model.

An entity relationship model proposes thinking of a database as a collection of entities rather than being used as a model 
on its own, the ER model is used as a tool to design relational databases. In the ER model, entities are objects that exist 
independently of any other entities in the database. The building blocks of an ER diagram are entities and attributes. An 
entity can be a noun: person, place, or thing. In an ER diagram, an entity is drawn as a rectangle. Entities have attributes 
which are the data elements that characterize the entity. Attributes tell us more about the entity. In an ER diagram, 
attributes are drawn as ovals. 

Using a simplified library as an example, the book is an example of an entity. Attributes are certain properties or 
characteristics of an entity and tell us more about the entity. The entity book has attributes such as book title, the 
edition of the book, the year the book was written, etc Attributes are connected to exactly one entity. The entity book 
becomes a table in the database and the attributes become the columns in a table. A table is a combination of rows and 
columns.

Each attribute stores data values of different formats, characters, numbers dates, currency etc.

Each table is assigned a primary key. The primary key of a relational table uniquely identifies each tuple or row in a table, 
preventing duplication of data and providing a way of defining relationships between tables. Tables can also contain foreign 
keys which are primary keys defined in other tables, creating a link between the tables.

SQL Statements are used for interacting with Entities (that is, tables), Attributes (that is, columns) and their tuples (or 
rows with data values) in relational databases. SQL statements fall into two different categories: Data Definition Language 
statements and Data Manipulation Language statements.

Data Definition Language (or DDL) statements are used to define, change, or drop database objects such as tables. Common DDL 
statement types include CREATE, ALTER, TRUNCATE, and DROP. 

CREATE: which is used for creating tables and defining its columns; ALTER: is used for altering tables including adding and 
dropping columns and modifying their datatypes; TRUNCATE: is used for deleting data in a table but not the table itself; 
DROP: is used for deleting tables.

Data Manipulation Language (or DML) statements are used to read and modify data in tables. These are also sometimes referred 
to as CRUD operations, that is, Create, Read, Update and Delete rows in a table. Common DML statement types include INSERT, 
SELECT, UPDATE, and DELETE. INSERT: is used for inserting a row or several rows of data into a table; SELECT: reads or 
selects row or rows from a table; UPDATE: edits row or rows in a table; And DELETE: removes a row or rows of data from a 
table. 

see create-statement-syntax1.png create-statement-example1.png create-statement-example2 create-statement-example3

You use the alter table statement to add or remove columns from a table, to modify the data 
type of columns, to add or remove keys, and to add or remove constraints. The syntax of the 
alter table statement alter-statement-syntax.png alter-statement-syntax2.png alter-statement-syntax3.png
drop-statement-syntax.png truncate-statement-syntax.png

Altering the data type of a column containing existing data can cause problems though, if the 
existing data is not compatible with a new data type.

There are variations in syntax between different databases. 

retrieving rows of data from a table using a string pattern and where clause:
        - firstname like 'R%' will retrieve tuples with firstname column values that start with R eg Raul, Robert etc
        - pages >= 290 and pages <= 300 is the same as pages between 290 and 300
        - country='AU' or country='BR' is the same as country in('AU', 'BR')

if you want to sort result sets use the order by clause eg order by title will order result set alphabetically on the title column. sorting will be done in ascending order by default. if you want the result set to be sorted in descending order, add the desc clause after the column name

eliminate duplicates using the distinct clause

grouping result sets using the group by clause. the having clause only works with the group by clause

see built-in-func1.png built-in-func2 built-in-func3

see date-time-1.png date-time-2 date-time-3 date-time-4 date-time-5

subqueries and nested selects: see nested-subq1 nested-subq2 nested-subq3 nested-subq4 nested-subq5

working with multiple tables: see multiple-tables1.png multiple-tables2.png mutiple-tables3.png multiple-tables4.png multiple-tables5.png multiple-tables6.png multiple-tables7 multiple-tables8 multiple-tables9 

why use python to access databases? see python-db-access-1.png python-db-access-2.png python-db-access-3 python-db-access-4
python-db-access-5 python-db-access-6 python-db-access-7

what are jupyter notebooks? open source web application that allows creation and sharing of documents that containlive code, equations, visualisations, and narrative texts. see notebook-advantages.png 

what is the db-api? mechanism by which the Python code communicates with the DBMS see python-db-access-6 python-db-access-9 The DB-API includes a connect constructor for creating a connection to the database. It returns a connection object which is then used by the various connection methods. These connection methods are the cursor method, which returns a new cursor object using the connection. The commit method, which is used to commit any pending transaction to the database. The rollback method, which causes the database to roll back to the start of any pending transaction. The close method, which is used to close a database connection. see python-db-access-10 

These objects represent a database cursor which is used to manage the content of a fetch operation. Cursors created from the same connection are not isolated. That is, any changes done to the database by a cursor are immediately visible by the other cursors. Cursors created from different connections can or cannot be isolated depending on how the transaction support is implemented. see
python-db-access-11

As you already know, each database system has its own library/ api see python-db-access-8

what is a database cursor? It behaves like a file name or file handle in a programming language. Just as a program opens a file to access its contents, it opens a cursor to gain access to the query results. Similarly, the program closes a file to end its access, and closes a cursor to end access to the query results. Another similarity is that just as file handle keeps track of the program's current position within an open file, a cursor keeps track of the program's current position within the query results. see cursor.png