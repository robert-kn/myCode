Selected Socioeconomic Indicators in Chicago

The city of Chicago released a dataset of socioeconomic data to the Chicago City Portal. This dataset contains a selection of six socioeconomic indicators of public health significance and a “hardship index,” for each Chicago community area, for the years 2008 – 2012.

Scores on the hardship index can range from 1 to 100, with a higher index number representing a greater level of hardship.

A detailed description of the dataset can be found on the city of Chicago's website, but to summarize, the dataset has the following variables:

Community Area Number (ca): Used to uniquely identify each row of the dataset

Community Area Name (community_area_name): The name of the region in the city of Chicago

Percent of Housing Crowded (percent_of_housing_crowded): Percent of occupied housing units with more than one person per room

Percent Households Below Poverty (percent_households_below_poverty): Percent of households living below the federal poverty line

Percent Aged 16+ Unemployed (percent_aged_16_unemployed): Percent of persons over the age of 16 years that are unemployed

Percent Aged 25+ without High School Diploma (percent_aged_25_without_high_school_diploma): Percent of persons over the age of 25 years without a high school education

Percent Aged Under 18 or Over 64:Percent of population under 18 or over 64 years of age (percent_aged_under_18_or_over_64): (ie. dependents)

Per Capita Income (per_capita_income_): Community Area per capita income is estimated as the sum of tract-level aggragate incomes divided by the total population

Hardship Index (hardship_index): Score that incorporates each of the six selected socioeconomic indicators

In this Lab, we'll take a look at the variables in the socioeconomic indicators dataset and do some basic analysis with Python.

Connect to the database
Let us first load the SQL extension and establish a connection with the database

The syntax for connecting to magic sql using sqllite is
%sql sqlite://DatabaseName

where DatabaseName will be your .db file

!pip install ipython-sql
!pip install seaborn
import seaborn as sns
%load_ext sql


import csv, sqlite3

con = sqlite3.connect("socioeconomic.db")
cur = con.cursor()
!pip install pandas 

%sql sqlite:///socioeconomic.db

Store the dataset in a Table
In many cases the dataset to be analyzed is available as a .CSV (comma separated values) file, perhaps on the internet. To analyze the data using SQL, it first needs to be stored in the database.
We will first read the csv files from the given url into pandas dataframes
Next we will be using the df.to_sql() function to convert each csv file to a table in sqlite with the csv data loaded in it.

import pandas
df = pandas.read_csv('https://data.cityofchicago.org/resource/jcxq-k9xf.csv')
df.to_sql("chicago_socioeconomic_data", con, if_exists='replace', index=False,method="multi")

# Install the 'ipython-sql' and 'prettytable' libraries using pip
!pip install ipython-sql prettytable

# Import the 'prettytable' library, which is used to display data in a formatted table
import prettytable

# Set the default display format for prettytable to 'DEFAULT' (i.e., a simple table format)
prettytable.DEFAULT = 'DEFAULT'


You can verify that the table creation was successful by making a basic query like:

%sql SELECT * FROM chicago_socioeconomic_data limit 5;

Problems

Problem 1
How many rows are in the dataset?

Problem 2
How many community areas in Chicago have a hardship index greater than 50.0?

Problem 3
What is the maximum value of hardship index in this dataset?

Problem 4
Which community area which has the highest hardship index?

Problem 5
Which Chicago community areas have per-capita incomes greater than $60,000?

Problem 6
Create a scatter plot using the variables per_capita_income_ and hardship_index. Explain the correlation between the two variables.