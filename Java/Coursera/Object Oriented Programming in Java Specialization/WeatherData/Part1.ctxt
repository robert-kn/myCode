#BlueJ class context
comment0.target=Part1
comment0.text=\n\ Write\ a\ description\ of\ Part1\ here.\n\ \n\ @author\ (your\ name)\ \n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=parser\ value
comment1.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment10.params=
comment10.target=void\ testLowestHumidityInFile()
comment11.params=
comment11.target=void\ testFileWithColdestTemperature()
comment12.params=
comment12.target=void\ testcoldestHourInFile()
comment13.params=
comment13.target=edu.duke.FileResource\ returnFileResource()
comment14.params=fr
comment14.target=org.apache.commons.csv.CSVParser\ returnCSVParser(edu.duke.FileResource)
comment15.params=
comment15.target=org.apache.commons.csv.CSVRecord\ returnLargestRecord()
comment16.params=path
comment16.target=void\ printAllTemps(java.lang.String)
comment2.params=parser
comment2.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment3.params=
comment3.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment4.params=parser
comment4.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment5.params=parser
comment5.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment6.params=
comment6.target=java.lang.String\ fileWithColdestTemperature()
comment7.params=
comment7.target=void\ testAverageTemperatureInFile()
comment8.params=
comment8.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment9.params=
comment9.target=void\ testLowestHumidityInManyFiles()
numComments=17
