chapter 1

1. what do you think of when you hear that a computer is a deterministic system?
2. a computer is a complex system made up of what? systematically interconnected simple parts; like building a house, it is
these simple parts that the book will introduce, explain and tie together to show how they make up a computer
3. what is the main goal of the book? by the time you are finished, you will be able to write programs using a language like C and be able to understand what is going on underneath the computer
4. what do high level languages enable programmers to do? effectively develop complex sofware by abstracting away the details of the underlying hardware
5. what are the two recurring themes in the book? abstraction and not separating hardware and software layers of a computer
6. define abstraction? technique of establishing a simpler way to interact with a system
7. what is the premise that allows us o use abstraction effectively? allows not getting bogged down in the details of a system when everything is working fine
8. when the details is not working fine, what must ou be able to do? unabstract i.e. go from the abstraction back to its component parts
9. why should you strive to keep the level of abstraction as high as possible? allows me to be much more efficient in dealing with systems
10. why should you be careful about letting abstractions be the deepest level of my understanding? because you will be at the mercy of of the component parts working together without your intervention
11. what should you keep in mind during your study and practice of computing? hardware and software are component parts of a computing system that work best when they are designed by people who take into account the capabilities and limitations of both
12. definition of a computer? system consisting of software that directs and specifies the processing of information and the hardware that perfroms the actual processing of information in response to what the software specifies
13. what piece of hardware actually does the processing in a computer? CPU
14. when did the first computers show their face on planet earth? 1940s
15. what was the name of the first computer? ENIAC
16. what is marked about the computing devices of today and those of yesteryear? the weights have decreased tremendously, so has the power consumption. the computing power has increased by many orders of magnitude
17. what has brought about this increase in computational power? integrated circuit packages have seen phenomenal improvement e.g first intel microprocessor (intel 4004) contained 2300 transistors and operated at 106 KHz; one of the latest intel microprocessors Core i9-13900K contains a reported 25.9 billion transistors and and can operate at a frequency of 5.8 GHz
18. what does this mean? that a computer running on on intels latest CPU today can do many more things in the time it took the first intel pc to do one thing 
19. what does this mean? we have computers today that seem able to understand languages people speak, recognise peoples faces which many seeas the magin of artificial intelligence. however, these feats are only possible because the electronic idiots are able to run simple operations blazingly fast concurrently 
20. what two ideas are at the core of computing? all computers (fastest, slowest, cheapest, most expensive) are capable of computing exactly he same things if they are given enough time and memory and problems are epressed in human labguage but are solved by electrons moving due to voltage potentials inside the computer. this means a series of systematic transformtions have to be made from a problem expressed in a human language in order for the electrons to do our bidding inside a computer
21. what has happened to these sequence of transformations over the last 70 years? they have been developed, refined and improved 
22. how do analogue machines work? produce an answer by meassuring some physical quantity such as distance or voltage
23. why are analogue machines difficult to work with? it is very hard to increase their accuracy 
24. why did digital machines come to dominate computing? it is easy to increase their accuracy
25. definition of a digital machine? machines that perform computations by manipulating a fixed finite set of digits or letters 
26. what limitations did digital machines of yesteryear have? the mechanical or electro-mechanical devices could only perform a specific type of computation
27. how are digital computers different from machines of yesteryear? when you think of a new computation, you do not have to buy or design a new computer, you just give the same computer a new set of instructions to carry out the new computation
28. why do we call digital computers universal computational devices? because of the point made above
29. what does the study of computing involve? study the fundamentals of all computing along with learning what computation is and what can be computed
30. who is attributed with the idea of a universal computation device?
31. what did alan uring propose? that all computations could be carried out by a particular kind of machine - a turing machine
32. what do computers and turing machines have in common? they are programmable
33. what implication does the answer to question 32 have? big or expensive computers cannot do anything that a small cheap computer can't
more money will buy you an faster computer but if you have a small inexpensive laptop then you already have a universal computation device
34. how do we get the electrons to do our bidding inside of a computer? work through the levels of transformation for a particular problem
35. what is the first level of transformation? describe a problem in a natural language whilst avoiding ambiguity because the electronic idiot would not know what to do
36. what is the second level of transformation? convert the problem expressed in natural language into an algorithm thereby getting rid of the ambiguity inherent in natural language
37. what are the three characteristics of an algorithm?
38. what is the 3rd level of transformation? transform the algorithm into source code using a chosen programming language
39. what are the two kinds of programming language that exist? high level and low level
40. provide a definition for a high level language? independent of the computer from which they will execute on i.e. they are machine independent
41. provide a definition for a low level langauge? tied to the computer on which the programs will execute i.e. assembly language
42. what is the fourth level of transformation? translating the source code into the ISA of the computer that will be used to
execute the program.
43. what does ISA specify? the interface between the source code and the hardware of the machine that will be used to execute the program
44. using the automobile and driver analogy, what is represents the source code, the ISA and the hardware?
45. what do opcode and operand mean? operand is the data value
46. ISA specifies the acceptable representations for operands, what are the operands called? 
47. ISA specifies the mechanisms that the computer can use to figure out where operands are located. what are these mechanisms called? 
48. are the number of opcodes, operands and addressing modes unique to each ISA?
49. what else does ISA specify (apart from opcodes, operands, and addressing modes)? number of unique locations that comprise the computers memory (address space)
and the number of bits contained in each location (addressability)
50. name a few ISAs in use today? x86 by intel (currently also developed by AMD an other companies), SPARC oracle, power (IBM), arm and thumb (ARM)
51. what is the name of the program that is used to translate source code into the ISA of the machine that will be responsible for executing it? 
52. what is the name of the program that translates assembly languaage of a computer to its ISA? assembler
53. what is the 5th level of transformation? micro-architecture i.e. using the automobile analagy from earlier, it refers to what goes on under the hood of a car
this micro-architecture is dependent performance, cost and energy trade offs made by designers 
54. what is the 6th level of transformation? logic circuits i.e. the micro-architecture is implemented out of simple logic circuits
55. what is 7th level of transformation? logic circuits can be implemented different device technologies e.g. CMOS circuits, NMOS circuits or gallium arsenide circuits


chapter 2

1. what do you call the tiny little devices inside computer that control the movement of electrons by reacting to the presence or absence electrons?
